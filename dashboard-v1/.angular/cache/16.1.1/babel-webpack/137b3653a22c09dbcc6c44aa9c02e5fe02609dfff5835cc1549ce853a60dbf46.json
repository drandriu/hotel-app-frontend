{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HotelService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/hoteles';\n  }\n  obtenerHoteles(page = 0, size = 5) {\n    return this.http.get(`${this.apiUrl}?page=${page}&size=${size}`);\n  }\n  eliminarHotel(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  registrarHotel(hotel) {\n    return this.http.post(this.apiUrl, hotel);\n  }\n  editarHotel(hotel) {\n    return this.http.put(`${this.apiUrl}/${hotel.id}`, hotel);\n  }\n}\nHotelService.ɵfac = function HotelService_Factory(t) {\n  return new (t || HotelService)(i0.ɵɵinject(i1.HttpClient));\n};\nHotelService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HotelService,\n  factory: HotelService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HotelService","constructor","http","apiUrl","obtenerHoteles","page","size","get","eliminarHotel","id","delete","registrarHotel","hotel","post","editarHotel","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\usuario\\Desktop\\empresa\\hotel-app-frontend\\dashboard-v1\\src\\app\\services\\hotel.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Hotel } from \"../models/hotel.model\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface PaginatedResponse<T> {\r\n    content: T[];\r\n    totalElements: number;\r\n    totalPages: number;\r\n    number: number;\r\n    size: number;\r\n  }\r\n  \r\n  @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class HotelService {\r\n    private apiUrl = 'http://localhost:8080/hoteles';\r\n  \r\n    constructor(private http: HttpClient) {}\r\n  \r\n    obtenerHoteles(page: number = 0, size: number = 5): Observable<PaginatedResponse<Hotel>> {\r\n      return this.http.get<PaginatedResponse<Hotel>>(`${this.apiUrl}?page=${page}&size=${size}`);\r\n    }\r\n  \r\n    eliminarHotel(id: number): Observable<void> {\r\n      return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n    }\r\n  \r\n    registrarHotel(hotel: Hotel): Observable<Hotel> {\r\n      return this.http.post<Hotel>(this.apiUrl, hotel);\r\n    }\r\n  \r\n    editarHotel(hotel: Hotel): Observable<Hotel> {\r\n      return this.http.put<Hotel>(`${this.apiUrl}/${hotel.id}`, hotel);\r\n    }\r\n  }"],"mappings":";;AAgBE,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+BAA+B;EAET;EAEvCC,cAAcA,CAACC,IAAA,GAAe,CAAC,EAAEC,IAAA,GAAe,CAAC;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAA2B,GAAG,IAAI,CAACJ,MAAM,SAASE,IAAI,SAASC,IAAI,EAAE,CAAC;EAC5F;EAEAE,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIM,EAAE,EAAE,CAAC;EACvD;EAEAE,cAAcA,CAACC,KAAY;IACzB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAQ,IAAI,CAACV,MAAM,EAAES,KAAK,CAAC;EAClD;EAEAE,WAAWA,CAACF,KAAY;IACtB,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAQ,GAAG,IAAI,CAACZ,MAAM,IAAIS,KAAK,CAACH,EAAE,EAAE,EAAEG,KAAK,CAAC;EAClE;;AAnBWZ,YAAY,C;mBAAZA,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZnB,YAAY,C;SAAZA,YAAY;EAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}